openapi: 3.0.3
info:
  title: "mobile-order-system"
  version: "1.0.0"
paths:
  /login:
    post:
      summary: "Login"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: "Unauthorized"
  /setting/tables:
    put:
      summary: "update table count"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - new_table_count
              properties:
                new_table_count:
                  type: integer
      responses:
        '200':
          description: "OK"
        '401':
          description: "Unauthorized"
        '422':
          description: "Unprocessable Entity"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Cannot set table count higher than 20"
  /setting/items:
    post:
      summary: "add new item"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - price
                - image
                - cost_price
                - tax_rate_id
              properties:
                name:
                  type: string
                price:
                  type: integer
                image:
                  type: string
                  format: binary
                cost_price:
                  type: integer
                tax_rate_id:
                  type: integer
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        '401':
          description: "Unauthorized"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ファイルのアップロードに失敗しました"
  /setting/items/{id}:
    patch:
      summary: "update item"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: integer
                cost_price:
                  type: integer
                tax_rate_id:
                  type: integer
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        '401':
          description: "Unauthorized"
        '404':
          description: "Not Found"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ファイルのアップロードに失敗しました"
    delete:
      summary: "delete item"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "OK"
        '401':
          description: "Unauthorized"
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /orders:
    get:
      summary: "get orders"
      description: "クエリパラメータでの指定がなければ現在未会計のオーダーを全て返します"
      parameters:
        - name: table_number
          in: query
          schema:
            type: string
          description: "return open order for table number"
        - name: order_id
          in: query
          schema:
            type: string
          description: "return order by order id"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
        '401':
          description: "Unauthorized"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal Server Error"
    post:
      summary: "initialize order"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - table_number
              properties:
                table_number:
                  type: integer
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  order:
                    $ref: "#/components/schemas/Order"
                  pageURL:
                    type: string
        '401':
          description: "Unauthorized"
        '422':
          description: "Unprocessable Entity"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "テーブル番号が無効です"

  /items:
    get:
      summary: "get items"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item"
        '401':
          description: "Unauthorized"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal Server Error"
  /orders/items:
    post:
      summary: "add item to order"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      quantity:
                        type: integer
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    $ref: "#/components/schemas/OrderItem"
        '401':
          description: "Unauthorized"
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: "update order item"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                quantity:
                  type: integer
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    $ref: "#/components/schemas/OrderItem"
        '401':
          description: "Unauthorized"
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Token:
      type: object
      properties:
        token:
          type: string

    Item:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        image_url:
          type: string
        cost_price:
          type: integer
        tax_rate_id:
          type: integer

    Order:
      type: object
      properties:
        id:
          type: integer
        table_number:
          type: integer
        total_price:
          type: integer
        status:
          type: string
        order_items:
          type: array
          items:
            $ref: "#/components/schemas/OrderItem"
    
    OrderItem:
      type: object
      properties:
        id:
          type: integer
        item:
          $ref: "#/components/schemas/Item"
        quantity:
          type: integer
        cost_price:
          type: integer
        tax_rate:
          type: integer
        sub_total:
          type: integer
        order_id:
          type: integer
        
    Error:
      type: object
      properties:
        message:
          type: string  
          
